import React, { useState, useEffect } from "react";
import { ethers } from "ethers";
import { acceptLoan, claimCollateral, repayLoan, batchCheckOverdue } from "@/contractService";
import { Loan } from "@/types/Loan";
import { FaEthereum, FaPercentage, FaUser, FaClock} from "react-icons/fa";

interface OfferProps {
  offer: Loan;
  onUpdate: () => Promise<void>;
  source: "loansection" | "offersection" | "offers";
}

const OfferComponent: React.FC<OfferProps> = ({ offer, onUpdate, source }) => {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const formatToEth = (wei: string | number | bigint): string => {
    return parseFloat(ethers.formatEther(wei)).toFixed(9);
  };

  const handleButtonClick = async () => {
  try {
    setLoading(true);
    setError(null);

    // –î–ª—è –∑–∞–π–º–æ–≤ (loansection)
    if (source === "loansection" && (offer.status === "Accepted" || offer.status === "Overdue")) {
      const amount = BigInt(offer.amount);
      const interestRate = Number(offer.interest);
      const interest = (amount * BigInt(interestRate)) / BigInt(100);
      const totalRepayment = amount + interest;
      await repayLoan(offer.id, BigInt(totalRepayment));
      await onUpdate();
    } 
    // –î–ª—è —Å–≤–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π (offersection)
    else if (source === "offersection") {
      if (offer.status === "Overdue") {
        await claimCollateral(offer.id);
      } else if (offer.status === "Created") {
        // –ó–¥–µ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        //await cancelOffer(offer.id);
      }
      await onUpdate();
    }
    // –î–ª—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π (offers)
    else if (source === "offers" && offer.status === "Created") {
      await acceptLoan(offer.id, BigInt(offer.collateral));
      await onUpdate();
    }

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞:", err);
    setError(
      source === "loansection"
        ? "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É."
        : source === "offersection"
        ? offer.status === "Overdue"
          ? "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±—Ä–∞—Ç—å –∑–∞–ª–æ–≥."
          : "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
        : "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ."
    );
  } finally {
    setLoading(false);
  }
};

return (
  <div className="bg-deepMossGreen shadow-md hover:shadow-lg rounded-lg p-4 w-full max-w-3xl mx-auto border border-gray-300 transition-shadow duration-300">
    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
    <div className="flex justify-between items-center mb-4">
      <h3 className="text-lg font-bold text-darkGold">–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h3>
      <span className="text-sm font-medium flex items-center space-x-2">
        {(() => {
          const status = offer.status;
          const now = Math.floor(Date.now() / 1000);
          const duration = offer.duration || 0;
          const dueDate = Number(offer.due_date);

          // –î–ª—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö
          if (status === "Overdue") {
            return <span className="text-base font-semibold text-red-500">–ü–†–û–°–†–û–ß–ï–ù</span>;
          }

          // –î–ª—è –∑–∞–∫—Ä—ã—Ç—ã—Ö
          if (status === "Closed" || status === "Repaid") {
            return <span className="text-base font-semibold text-darkGold">–ó–ê–ö–†–´–¢</span>;
          }

          // –î–ª—è —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö
          if (status === "Created") {
            const minutes = Math.floor(duration / 60);
            return (
              <>
                <FaClock className="text-darkGold" />
                <span>
                  <span className="text-darkGold">–°—Ä–æ–∫:</span>{" "}
                  <span className="text-base font-semibold text-lightGray">
                    {`${minutes > 0 ? minutes : 0} –º–∏–Ω—É—Ç`}
                  </span>
                </span>
              </>
            );
          }

          // –î–ª—è –ø—Ä–∏–Ω—è—Ç—ã—Ö
          if (status === "Accepted") {
            const secondsLeft = dueDate - now;
            if (secondsLeft <= 0) {
              return <span className="text-base font-semibold text-red-500">–ü–†–û–°–†–û–ß–ï–ù</span>;
            }
            const minutes = Math.floor(secondsLeft / 60);
            return (
              <>
                <FaClock className="text-darkGold" />
                <span>
                  <span className="text-darkGold">–°—Ä–æ–∫:</span>{" "}
                  <span className="text-base font-semibold text-lightGray">
                    {`${minutes} –º–∏–Ω—É—Ç`}
                  </span>
                </span>
              </>
            );
          }

          return null;
        })()}
      </span>
    </div>

      <hr className="border-t border-gray-300 my-2" />
      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="grid grid-cols-2 gap-y-6 gap-x-6 mb-4">
        {/* –°—É–º–º–∞ */}
        <div className="flex items-start space-x-2">
          <FaEthereum className="text-darkGold mt-1" />
          <div>
            <p className="text-sm text-darkGold">–°—É–º–º–∞</p>
            <p className="text-base font-semibold text-lightGray">{formatToEth(offer.amount)} ETH</p>
          </div>
        </div>

        {/* –ó–∞–ª–æ–≥ */}
        <div className="flex items-start space-x-2">
          <FaEthereum className="text-darkGold mt-1" />
          <div>
            <p className="text-sm text-darkGold">–ó–∞–ª–æ–≥</p>
            <p className="text-base font-semibold text-lightGray">{formatToEth(offer.collateral)} ETH</p>
          </div>
        </div>

        {/* –ü—Ä–æ—Ü–µ–Ω—Ç */}
        <div className="flex items-start space-x-2">
          <FaPercentage className="text-darkGold mt-1" />
          <div>
            <p className="text-sm text-darkGold">–ü—Ä–æ—Ü–µ–Ω—Ç</p>
            <p className="text-base font-semibold text-lightGray">{offer.interest}%</p>
          </div>
        </div>

        {/* –ö—Ä–µ–¥–∏—Ç–æ—Ä –∏–ª–∏ –ó–∞—ë–º—â–∏–∫ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º */}
<div className="flex items-start space-x-2">
  <FaUser className="text-darkGold mt-1" />
  <div>
    <p className="text-sm text-darkGold">
      {source === "loansection" ? "–ö—Ä–µ–¥–∏—Ç–æ—Ä" : source === "offersection" ? "–ó–∞—ë–º—â–∏–∫" : "–ö—Ä–µ–¥–∏—Ç–æ—Ä"}
    </p>
    <p className="text-base font-semibold text-lightGray">
      {source === "loansection"
        ? offer.lender?.username || offer.lender?.id
        : source === "offersection"
        ? offer.borrower?.username || offer.borrower?.id || "‚Äî"
        : offer.lender?.username || offer.lender?.id}
    </p>

    {/* üëá –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ */}
    <p className="text-sm text-gray-400">
      –†–µ–π—Ç–∏–Ω–≥:{" "}
      {source === "loansection"
        ? offer.lender?.rating?.toFixed(2) ?? "0.00"
        : source === "offersection"
        ? offer.borrower?.rating?.toFixed(2) ?? "0.00"
        : offer.lender?.rating?.toFixed(2) ?? "0.00"}
    </p>
  </div>
</div>

      </div>

      <hr className="border-t border-gray-300 my-2" />

      {/* –ö–Ω–æ–ø–∫–∞ */}
<div className="flex justify-between items-center">
  {error && <p className="text-sm text-red-500">{error}</p>}
  {/* –õ–æ–≥–∏–∫–∞ –¥–ª—è offersection */}
  {source === "offersection" && (
    <>
      {offer.status === "Overdue" && (
        <button
          onClick={handleButtonClick}
          disabled={loading}
          className={`px-3 py-1 rounded-md text-white font-semibold ${
            loading ? "bg-gray-400 cursor-not-allowed" : "bg-charcoalGreen hover:bg-charcoalBlue"
          } transition duration-300`}
        >
          {loading ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." : "–ó–∞–±—Ä–∞—Ç—å –∑–∞–ª–æ–≥"}
        </button>
      )}
      {offer.status === "Created" && (
        <button
          onClick={handleButtonClick}
          disabled={loading}
          className={`px-3 py-1 rounded-md text-white font-semibold ${
            loading ? "bg-gray-400 cursor-not-allowed" : "bg-charcoalGreen hover:bg-charcoalBlue"
          } transition duration-300`}
        >
          {loading ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." : "–û—Ç–º–µ–Ω–∏—Ç—å"}
        </button>
      )}
    </>
  )}

  {/* –õ–æ–≥–∏–∫–∞ –¥–ª—è loansection */}
  {source === "loansection" && (offer.status === "Overdue" || offer.status === "Accepted") && (
    <button
      onClick={handleButtonClick}
      disabled={loading}
      className={`px-3 py-1 rounded-md text-white font-semibold ${
        loading ? "bg-gray-400 cursor-not-allowed" : "bg-charcoalGreen hover:bg-charcoalBlue"
      } transition duration-300`}
    >
      {loading ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." : "–ó–∞–∫—Ä—ã—Ç—å"}
    </button>
  )}
  {/* –õ–æ–≥–∏–∫–∞ –¥–ª—è offers */}
  {source === "offers" && offer.status === "Created" && (
    <button
      onClick={handleButtonClick}
      disabled={loading}
      className={`px-3 py-1 rounded-md text-white font-semibold ${
        loading ? "bg-gray-400 cursor-not-allowed" : "bg-charcoalGreen hover:bg-charcoalBlue"
      } transition duration-300`}
    >
      {loading ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." : "–ü—Ä–∏–Ω—è—Ç—å"}
    </button>
  )}
</div>
    </div>
  );
};

export default OfferComponent;